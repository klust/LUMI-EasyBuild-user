#created by Emanuele Vitali and adapted by Jorik van Kemenade (LUST)
#DOC Chapel without GPU support. The installation has been tested in LUMI/24.03.
#DOC
#DOC Tricky version that can work in CrayEnv also. It claims to use the SYSTEM toolchain,
#DOC but under the hood it is using the Cray compiler to build Chapel. You should be able
#DOC to install it even for CrayEnv (by using `module load LUMI/24.03 partition/CrayEnv EasyBuild-user`,
#DOC but it will only work for the CPU target that you find here close to the top of the
#DOC EasyBuild recipe.
easyblock = 'ConfigureMake'

local_CPUtarget_module = 'craype-x86-milan'

import os as local_os

# The next line is a dirty trick not very much loved by the EasyBuild developers but
# it helps to make this EasyConfig indpendent of the LUMI software stack version as there is
# no other reference to that version in the file that we can use since it relies on the
# SYSTEM toolchain.
local_LUMI_version = local_os.environ['LUMI_STACK_CPE_VERSION']

name =          'Chapel'
version =       '2.6.0'
versionsuffix = '-CPU'

homepage = 'https://chapel-lang.org/'

whatis = [
    'Description: Compiler for the Chapel programming language'
]

description = """
Chapel, the Cascade High Productivity Language, is a parallel programming
language that was developed by Cray,[3] and later by Hewlett Packard Enterprise
which acquired Cray. It was being developed as part of the Cray Cascade project,
a participant in DARPA's High Productivity Computing Systems (HPCS) program,
which had the goal of increasing supercomputer productivity by 2010.
Its development still continues as an open source project.
"""

docurls = [
    'Web-based documentation at https://chapel-lang.org/learn/'
]

toolchain =   SYSTEM

source_urls = ['https://github.com/%(namelower)s-lang/%(namelower)s/releases/download/%(version)s']
sources =     ['%(namelower)s-%(version)s.tar.gz']
checksums  =  ['e469c35be601cf1f59af542ab885e8a14aa2b087b79af0d5372a4421976c74b6' ,] #tarball

builddependencies = [
    (local_CPUtarget_module, EXTERNAL_MODULE),
    ('buildtools',           local_LUMI_version),
]

prebuildopts = 'export CHPL_LLVM=bundled && '

postinstallcmds = [
    # Copy the man pages to a place where EasyBuild can find them
    #'cd %(installdir)s && cp -r %(namelower)s-%(version)s/man share/man',
    # Copy the license file etc. to the standard location used on LUMI
    'mkdir -p %(installdir)s/share/licenses/%(name)s',
    'cp ACKNOWLEDGEMENTS.md CHANGES.md CONTRIBUTORS.md COPYRIGHT LICENSE LICENSE.chapel README.files README.rst %(installdir)s/share/licenses/%(name)s',   
]

sanity_check_paths = {
    'files': ['bin/chpl'],
    'dirs':  [],
}

sanity_check_commands = [
    "chpl --version",
]

modextrapaths = {
    'PATH'    : 'util',
    'MANPATH' : 'man',
}

moduleclass = 'lang'
