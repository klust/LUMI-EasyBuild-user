# Developed by Kurt Lust for LUMI
easyblock = 'Bundle'

name =          'ccpe'
version =       '23.12'
versionsuffix = '-cce_17-18-rocm-5.4.1-17_18'

local_sif_dir = '/project/project_462000008/CCPE'
local_sif =     f'{name}-{version}{versionsuffix}.sif'

homepage = 'https://cpe.ext.hpe.com/'

whatis = [
    'Description: Containerised HPE-Cray Programming Environment'
]

description = """
This version provides the 23.12 programming environment in a custom setup
for the Destination Earth project.

The module defines a number of environment variables:
*   SIF and SIFCCPE: The full path and name of the Singularity SIF file 
    to use with singularity exec etc.

It also provides a number of scripts:
*   bootstrap-pure: Start the container using its internal settings, without
    taking over the LUMI environment.
*   bootstrap-lumi: Start the container in a way that the regular LUMI user
    environment is initialised.
    
This version of the module uses the container stored in the LUST project.
"""

toolchain = SYSTEM

local_bootstrap_pure="""
#!/bin/bash -e

unset SINGULARITY_BIND # As we want to do a full manual binding.

CCPE_APPTAINER_BIN="singularity"

export WORKDIR=$(pwd -P)

#
# Some dumb functions
#
log_info() {
printf "\\n\\e[0;35m $1\e[0m\\n\\n"
}
log_warn() {
printf "\\e[0;33m $1\\e[0m\\n"
}

log_info "bootstrapping CPE %(name)s-%(version)s%(versionsuffix)s container"
if [ ! -f \${SIFCCPE} ]; then
  log_warn "Cannot locate \${SIFCCPE}!"
  exit 1
fi

# rocm-5.4.1.lua binding is a bug fix for the rocm/5.4.1 module that damages the Lmod spider cache.
set -x
\${CCPE_APPTAINER_BIN} exec --rocm \\\\
                     --bind SIFDIR/rocm-5.4.1.lua:/opt/cray/pe/lmod/modulefiles/core/rocm/5.4.1.lua \\\\
                     --bind /pfs --bind /users --bind /projappl --bind /project --bind /scratch --bind /flash --bind /appl \\\\
                     --workdir \${WORKDIR} \\\\
                     \${SIFCCPE} bash

"""

local_bootstrap_lumi="""
#!/bin/bash -e

unset SINGULARITY_BIND # As we want to do a full manual binding.

CCPE_APPTAINER_BIN="singularity"

export WORKDIR=$(pwd -P)

#
# Some dumb functions
#
log_info() {
printf "\\n\\e[0;35m $1\e[0m\\n\\n"
}
log_warn() {
printf "\\e[0;33m $1\\e[0m\\n"
}

log_info "bootstrapping CPE %(name)s-%(version)s%(versionsuffix)s container"
if [ ! -f \${SIFCCPE} ]; then
  log_warn "Cannot locate \${SIFCCPE}!"
  exit 1
fi

# rocm-5.4.1.lua binding is a bug fix for the rocm/5.4.1 module that damages the Lmod spider cache.
set -x
\${CCPE_APPTAINER_BIN} exec --rocm \\\\
                      --bind SIFDIR/rocm-5.4.1.lua:/opt/cray/pe/lmod/modulefiles/core/rocm/5.4.1.lua \\\\
                      --bind /etc/cray-pe.d/cray-pe-configuration.sh \\\\
                      --bind %(installdir)s/etc/bash.bashrc.local:/etc/bash.bashrc.local \\\\
                      --bind /pfs --bind /users --bind /projappl --bind /project --bind /scratch --bind /flash --bind /appl \\\\
                      --workdir \${WORKDIR} \\\\
                      \${SIFCCPE} bash

"""

local_bashrc_local="""
# Clean-up the environment inherited from the caller of the container.
unset LOADEDMODULES ; unset _LMFILES_ ; unset \${!LMOD_@} ; unset \${!__LMOD_@} ; unset \${!_ModuleTable@}
unset \${!CRAY_LMOD_@} ; unset \${!CRAY@} ; unset \${!PE_@}
unset \${!LUMI_LMOD_@} 
unset MODULEPATH
unset INCLUDE_PATH_X86_64

# Why try to run the TCL modules initialisation???
#source /opt/cray/pe/modules/default/init/bash

# Setup of the PE.
source /etc/cray-pe.d/cray-pe-configuration.sh

mod_paths="/opt/cray/pe/lmod/modulefiles/core
           /opt/cray/pe/lmod/modulefiles/craype-targets/default
           \$mpaths
           /opt/cray/modulefiles
           /opt/cray/pe/lmod/lmod/modulefiles/Core/"
for p in \$(echo \$mod_paths) ; do
  if [ -d \$p ] ; then
    MODULEPATH=\$MODULEPATH:\$p
  fi
done
MODULEPATH=\$(echo \$MODULEPATH | sed "s_^:__")
export MODULEPATH

# If init_module_list already has a value, its value will be used. Otherwise 
# at least PrgEnv-$default_prgenv will be added to mlist.
mlist="\${init_module_list:-PrgEnv-\$default_prgenv} \${site_module_list}"
# The next line will not overwrite LMOD_SYSTEM_DEFAULT_MODULES if it already has a value.
LMOD_SYSTEM_DEFAULT_MODULES=\${LMOD_SYSTEM_DEFAULT_MODULES:-\$(echo \${mlist} | sed "s_  *_:_g")}
export LMOD_SYSTEM_DEFAULT_MODULES

source \$BASH_ENV && module --initial_load --no_redirect restore

printf "\\nWelcome to the CPE container.\\n\\nList of current modules:\\n" && module list

"""

postinstallcmds = [
    f'cd %(installdir)s && /usr/bin/ln -s {local_sif_dir}/{local_sif}',
    'mkdir -p %(installdir)s/bin',
    f'cat >%(installdir)s/bin/bootstrap_pure <<EOF {local_bootstrap_pure}EOF',
    f'sed -e \'s|SIFDIR|{local_sif_dir}|\' -i %(installdir)s/bin/bootstrap_pure',
    'chmod a+rx %(installdir)s/bin/bootstrap_pure',
    f'cat >%(installdir)s/bin/bootstrap_lumi <<EOF {local_bootstrap_lumi}EOF',
    f'sed -e \'s|SIFDIR|{local_sif_dir}|\' -i %(installdir)s/bin/bootstrap_lumi',
    'chmod a+rx %(installdir)s/bin/bootstrap_lumi',
    'mkdir -p %(installdir)s/etc',
    f'cat >%(installdir)s/etc/bash.bashrc.local <<EOF {local_bashrc_local}EOF',
    'chmod a+r %(installdir)s/etc/bash.bashrc.local',
]

sanity_check_paths = {
    'files': ['bin/bootstrap_pure', 'bin/bootstrap_lumi', 'etc/bash.bashrc.local'],
    'dirs':  [''],
}

modextravars = {
    'SIF':     f'{local_sif_dir}/{local_sif}',
    'SIFCCPE': f'{local_sif_dir}/{local_sif}',
}

modluafooter = f"""
prepend_path( 'SINGULARITY_BIND', '/appl',     ',' )
prepend_path( 'SINGULARITY_BIND', '/flash',    ',' )
prepend_path( 'SINGULARITY_BIND', '/scratch',  ',' )
prepend_path( 'SINGULARITY_BIND', '/project',  ',' )
prepend_path( 'SINGULARITY_BIND', '/projappl', ',' )
prepend_path( 'SINGULARITY_BIND', '/users',    ',' )
prepend_path( 'SINGULARITY_BIND', '/pfs',      ',' )
-- Comment the next two lines (with -- just as this line) if you want the module to be more or less 
-- the equivalent of bootstrap_pure. With these lines uncommented, `singularity exec $SIFCCPE bash`
-- will work more like bootstrap_lumi.
prepend_path( 'SINGULARITY_BIND', '%(installdir)s/etc/bash.bashrc.local:/etc/bash.bashrc.local', ',' )
prepend_path( 'SINGULARITY_BIND', '/etc/cray-pe.d/cray-pe-configuration.sh', ',' )
-- Work around a bug in the rocm module file
prepend_path( 'SINGULARITY_BIND', '{local_sif_dir}/rocm-5.4.1.lua:/opt/cray/pe/lmod/modulefiles/core/rocm/5.4.1.lua', ',' )
"""

moduleclass = 'devel'
