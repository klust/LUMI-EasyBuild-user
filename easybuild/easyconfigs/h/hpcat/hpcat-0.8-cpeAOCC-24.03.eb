# EasyConfig developed by Kurt Lust for LUMI.

easyblock = 'ConfigureMake'

local_hpcat_version =         '0.8'    # https://github.com/HewlettPackard/hpcat/tags
local_hpcat_hwloc_version =   '2.11.2' # Version reverse engineered from the tag used in the hpcat submodules directory
local_hpcat_libfort_version = '0.4.2'  # Version reverse engineered from the tag used in the hpcat submodules directory

name =    'hpcat'
version = '0.8'

homepage = 'https://github.com/HewlettPackard/hpcat'

whatis = [
    'Description: A tool to show NUMA and CPU affinities on LUMI.',
]

description = """
This application is designed to display NUMA and CPU affinities in the context
of HPC applications. Details about, MPI tasks, OpenMP (automatically enabled if
OMP_NUM_THREADS is set), accelerators (automatically enabled if GPUs are
allocated via Slurm) and network interfaces (Cray MPICH only, starting from 2
nodes) are reported. The application only shows detected affinities but
parameters can be used to force enabling/disabling details. 

This tool is developed by HPE.
"""

docurls = [
    "Help via hpcat --help",
]

import os as local_os
local_partition = local_os.getenv('LUMI_STACK_PARTITION')

toolchain = {'name': 'cpeAOCC', 'version': '24.03'}
# We'll let the code set the OpenMP flag when needed.
toolchainopts = {'usempi': True,'openmp': False}

sources = [
    { # HPCAT 0.8: https://github.com/HewlettPackard/hpcat/archive/refs/tags/v0.8.tar.gz
    'download_filename': 'v%(version)s.tar.gz',
    'filename':          '%(name)s-%(version)s.tar.gz',
    'source_urls':       ['https://github.com/HewlettPackard/hpcat/archive/refs/tags']
    },
    { # hwloc 2.11.2: https://github.com/open-mpi/hwloc/archive/refs/tags/hwloc-2.11.2.tar.gz
    'filename':          f'hwloc-{local_hpcat_hwloc_version}.tar.gz',
    'source_urls':       ['https://github.com/open-mpi/hwloc/archive/refs/tags'],
    'extract_cmd':       f'cd %(name)s-%(version)s/submodules && tar xvf %s && /bin/rm -rf hwloc && /bin/mv hwloc-hwloc-{local_hpcat_hwloc_version} hwloc',
    },
    { # libfort 0.4.2: https://github.com/seleznevae/libfort/archive/refs/tags/v0.4.2.tar.gz
    'download_filename': f'v{local_hpcat_libfort_version}.tar.gz',
    'filename':          f'libfort-{local_hpcat_libfort_version}.tar.gz',
    'source_urls':       ['https://github.com/seleznevae/libfort/archive/refs/tags'],
    'extract_cmd':       f'cd %(name)s-%(version)s/submodules && tar xvf %s && /bin/rm -rf libfort && /bin/mv libfort-{local_hpcat_libfort_version} libfort',
    },
]
checksums = [
    { f'hpcat-{version}.tar.gz':                       'fd548b28a921cd201f8d6bdf63f5ebab420c68461738f12b3085bd6623b341be' },
    { f'hwloc-{local_hpcat_hwloc_version}.tar.gz':     'a9cd3505db8f44d14aba17652d183c7180f01755c02b1b2c4f3950bd7ff5b5d3' },
    { f'libfort-{local_hpcat_libfort_version}.tar.gz': '8f7b03f1aa526e50c9828f09490f3c844b73d5f9ca72493fe81931746f75e489' },
]

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', SYSTEM), # For make
]

if local_partition == 'G':
    preconfigopts = prebuildopts = 'module unload craype-accel-amd-gfx90a && '

postinstallcmds = [
    'mkdir -p %(installdir)s/share/licenses/hpcat && cp LICENSE README.md %(installdir)s/share/licenses/hpcat'
]
if local_partition == 'G': 
    postinstallcmds.append( 'cd %(installdir)s/bin && ln -s %(installdir)s/lib/libhpcathip.so' )

local_files = [ 'bin/hpcat', 'share/licenses/hpcat/LICENSE' ]
if local_partition == 'G': 
    local_files += [ 'bin/libhpcathip.so' ]
sanity_check_paths = {
    'files': local_files,
    'dirs':  [ ]
}

sanity_check_commands = [
    'hpcat --version',
]

moduleclass = 'devel'
